/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PdfTestImport } from './routes/pdf-test'

// Create Virtual Routes

const WebrtcLazyImport = createFileRoute('/webrtc')()
const ParameterLazyImport = createFileRoute('/parameter')()
const LinkTestLazyImport = createFileRoute('/link-test')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const WebrtcLazyRoute = WebrtcLazyImport.update({
  path: '/webrtc',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/webrtc.lazy').then((d) => d.Route))

const ParameterLazyRoute = ParameterLazyImport.update({
  path: '/parameter',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/parameter.lazy').then((d) => d.Route))

const LinkTestLazyRoute = LinkTestLazyImport.update({
  path: '/link-test',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/link-test.lazy').then((d) => d.Route))

const PdfTestRoute = PdfTestImport.update({
  path: '/pdf-test',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/pdf-test': {
      id: '/pdf-test'
      path: '/pdf-test'
      fullPath: '/pdf-test'
      preLoaderRoute: typeof PdfTestImport
      parentRoute: typeof rootRoute
    }
    '/link-test': {
      id: '/link-test'
      path: '/link-test'
      fullPath: '/link-test'
      preLoaderRoute: typeof LinkTestLazyImport
      parentRoute: typeof rootRoute
    }
    '/parameter': {
      id: '/parameter'
      path: '/parameter'
      fullPath: '/parameter'
      preLoaderRoute: typeof ParameterLazyImport
      parentRoute: typeof rootRoute
    }
    '/webrtc': {
      id: '/webrtc'
      path: '/webrtc'
      fullPath: '/webrtc'
      preLoaderRoute: typeof WebrtcLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  PdfTestRoute,
  LinkTestLazyRoute,
  ParameterLazyRoute,
  WebrtcLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/pdf-test",
        "/link-test",
        "/parameter",
        "/webrtc"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/pdf-test": {
      "filePath": "pdf-test.tsx"
    },
    "/link-test": {
      "filePath": "link-test.lazy.tsx"
    },
    "/parameter": {
      "filePath": "parameter.lazy.tsx"
    },
    "/webrtc": {
      "filePath": "webrtc.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
